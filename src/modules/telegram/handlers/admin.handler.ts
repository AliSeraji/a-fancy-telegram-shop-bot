import { Injectable, Logger } from '@nestjs/common';
import * as TelegramBot from 'node-telegram-bot-api';
import { ConfigService } from '@nestjs/config';
import { UserService } from '../../user/user.service';
import { TelegramService } from '../telegram.service';
import { getAdminKeyboard } from '../utils/keyboards';

@Injectable()
export class AdminHandler {
  private logger = new Logger(AdminHandler.name);

  constructor(
    private telegramService: TelegramService,
    private configService: ConfigService,
    private userService: UserService,
  ) {}

  handle() {
    const bot = this.telegramService.getBotInstance();
    const adminTelegramId = '5661241603';

    bot.onText(/\/admin/, async (msg) => {
      const chatId = msg.chat.id;
      const telegramId = msg.from.id.toString();

      try {
        const user = await this.userService.findByTelegramId(telegramId);
        const language = user.language || 'uz';

        if (telegramId !== adminTelegramId) {
          const message = language === 'uz'
            ? '‚ùå Sizda admin huquqlari yo‚Äòq.'
            : '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.';
          await this.telegramService.sendMessage(chatId, message);
          return;
        }

        this.logger.log(`Processing admin panel for telegramId: ${telegramId}`);
        const message = language === 'uz'
          ? 'üë®‚Äçüíº Admin paneli:'
          : 'üë®‚Äçüíº –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:';
        await this.telegramService.sendMessage(chatId, message, {
          reply_markup: getAdminKeyboard(language),
        });
      } catch (error) {
        this.logger.error(`Error in admin panel: ${error.message}`);
        const user = await this.userService.findByTelegramId(telegramId);
        const language = user.language || 'uz';
        const message = language === 'uz'
          ? 'Admin panelini ochishda xato yuz berdi.'
          : '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.';
        await this.telegramService.sendMessage(chatId, message);
      }
    });
  }
}